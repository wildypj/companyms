services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: DateGetInto00$
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - my-network
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: {enter password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - my-network
    restart: unless-stopped

  zipkin:
    container_name: zipkin_container
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - my-network
    restart: unless-stopped

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      my-network:


  config-server-ms:
    container_name: config-server-ms
    image: wildypj0/config-server-ms:latest
    ports:
      - "8080:8080"
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  servicereg:
    container_name: servicereg
    image: wildypj0/servicereg:latest
    ports:
      - "8761:8761"
    depends_on:
      - rabbitmq
      - zipkin
      - postgres
      - pgadmin
    networks:
      - microservice-network
      - my-network

  companyms:
    container_name: company
    image: wildypj0/companyms:latest
    ports:
      - "8081:8081"
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  jobms:
    container_name: job
    image: wildypj0/jobms:latest
    ports:
      - "8082:8082"
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://servicereg:8761/eureka

  reviewms:
    container_name: review
    image: wildypj0/reviewms:latest
    ports:
      - "8083:8083"
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  gateway:
    container_name: gateway
    image: wildypj0/gateway:latest
    ports:
      - "8084:8084"
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

networks:
  my-network:
    driver: bridge
  microservice-network:
    driver: bridge

volumes:
  postgres:
  pgadmin: